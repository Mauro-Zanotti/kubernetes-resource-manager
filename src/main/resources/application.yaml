spring:
  # local database config
  datasource:
    url: ${JDBC_URL:jdbc:h2:file:./data/db}
    driverClassName: ${JDBC_DRIVER:org.h2.Driver}
    username: ${JDBC_USER:sa}
    password: ${JDBC_PASS:password}
  jpa:
    database-platform: ${JDBC_DIALECT:org.hibernate.dialect.H2Dialect}
    hibernate.ddl-auto: update

# server
server:
  port: ${SERVER_PORT:8080}
  servlet:
    context-path: ${SERVER_CONTEXT:/}
  tomcat:
    remoteip:
      remote_ip_header: ${SERVER_TOMCAT_REMOTE_IP_HEADER:x-forwarded-for}
      protocol_header: ${SERVER_TOMCAT_PROTOCOL_HEADER:x-forwarded-proto}
  error:
    include-stacktrace: ON_PARAM

# application
application.url: ${APPLICATION_URL:}

#kubernetes
kubernetes:
  namespace: ${K8S_NAMESPACE:default}
  config: ${K8S_CONFIG:}
  crd:
    allowed: ${K8S_CRD_ALLOWED:}
    denied:  ${K8S_CRD_DENIED:}
  selector:
    service: ${K8S_SELECTOR_SERVICE:}
    deployment: ${K8S_SELECTOR_DEPLOYMENT:}
    job: ${K8S_SELECTOR_JOB:}
    pvc: ${K8S_SELECTOR_PVC:}
  pvc:
    managed-by: ${K8S_PVC_MANAGED_BY:krm}
    storage-classes: ${K8S_PVC_STORAGE_CLASSES:krm}
  secret:
    labels: ${K8S_SELECTOR_LABELS:}
    owners: ${K8S_SELECTOR_OWNERS:}
    annotations: ${K8S_SELECTOR_ANNOTATIONS:}

# authentication and authorization config
auth:
  basic:
    username:
    password:
  oauth2:
    issuer-uri:
    audience:

security.cors.origins: ${SECURITY_CORS_ORIGINS:http://localhost:3000}

management:
  server:
    port: ${MANAGEMENT_PORT:8081}
  endpoints:
    enabled-by-default: false
    web:
      base-path:
      exposure.include: "health,info"
  endpoint:
    info:
      enabled: true
    health:
      enabled: true
